#   Copyright DataStax, Inc.
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

entities {
    Customer {
        fields {
            email: string
            firstName: string
            lastName: string
            balance: float 
        }
        relations {
            addresses { type: Address, inverse: customers }
            orders { type: Order, inverse: customer }
        }
    }
    Address {
        fields {
            street1: string
            street2: string
            city: string
            postalCode: string
            country: string
        }
        relations {
            customers { type: Customer, inverse: addresses }
            orders { type: Order, inverse: deliveryAddress }
        }
    }
    Order {
        fields {
            time: int
            subtotal: int
            tax: int
            total: int
            isOpen: boolean
        }
        relations {
            customer { type: Customer, inverse: orders }
            deliveryAddress { type: Address, inverse: orders }
            lineItems { type: LineItem, inverse: order }
        }
    }
    LineItem {
      fields {
        quantity: int
        receiveBy: int
        savedPrice: int
      }
      relations {
        product { type: Product, inverse: lineItems }
        order {type: Order, inverse: lineItems }
      }
    }
    Product {
        fields {
            name: string
            desc: string
            photoUrl: string
            price: int
        }
        relations {
            category { type: Category, inverse: products }
            lineItems { type: LineItem, inverse: product }
        }
    }
    Category {
      fields {
        name: string
        desc: string
      }
      relations {
        products { type: Product, inverse: category }
      }
    }
}
queries: {
    Product: {
         productsBelowPriceRange {
            "-match": [ price, "<", price]
            "-include": [ entityId, name, desc, photoUrl ],
          }
    }
}
queryConditions: {
    Order: [
        ["lineItems.receiveBy", "="]
    ]
}